cc_library(
    name = "webrtc-lib",
    srcs = [
        "src/out/Release/obj/libwebrtc.a"
    ],
    hdrs = glob(["src/**/*.h"]),
    defines = [
        "WEBRTC_POSIX",
        "WEBRTC_MAC",
    ],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "p2p_server_utils",
    srcs = [
        "src/out/Release/obj/p2p/p2p_server_utils/stun_server.o",
        "src/out/Release/obj/p2p/p2p_server_utils/turn_server.o",
    ],
    defines = [
        "WEBRTC_POSIX",
        "WEBRTC_MAC",
    ],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "rtc_base",
    srcs = [
        "src/out/Release/obj/rtc_base/stringutils/string_encode.o",
        "src/out/Release/obj/rtc_base/stringutils/string_to_number.o",
        "src/out/Release/obj/rtc_base/stringutils/string_builder.o",
        "src/out/Release/obj/rtc_base/stringutils/string_utils.o",
        "src/out/Release/obj/rtc_base/checks/checks.o",
        "src/out/Release/obj/rtc_base/rtc_base/async_packet_socket.o",
        "src/out/Release/obj/rtc_base/network/sent_packet/sent_packet.o",
        "src/out/Release/obj/rtc_base/rtc_base/socket.o",
        "src/out/Release/obj/rtc_base/rtc_base/socket_address.o",
        "src/out/Release/obj/rtc_base/rtc_base/ip_address.o",
        "src/out/Release/obj/rtc_base/timeutils/time_utils.o",
        "src/out/Release/obj/rtc_base/third_party/sigslot/sigslot/sigslot.o",
        "src/out/Release/obj/rtc_base/third_party/base64/base64/base64.o",
        "src/out/Release/obj/rtc_base/rtc_base/proxy_info.o",
        "src/out/Release/obj/rtc_base/rtc_base/crypt_string.o",
        "src/out/Release/obj/rtc_base/rtc_base/network_constants.o",
        "src/out/Release/obj/rtc_base/logging/logging.o",
        "src/out/Release/obj/rtc_base/rtc_base/ssl_fingerprint.o",
        "src/out/Release/obj/rtc_base/rtc_base_approved/copy_on_write_buffer.o",
        "src/out/Release/obj/rtc_base/rtc_base_approved/zero_memory.o",
        "src/out/Release/obj/rtc_base/rtc_base_approved/byte_buffer.o",
        "src/out/Release/obj/rtc_base/rtc_base_approved/event_tracer.o",
        "src/out/Release/obj/rtc_base/rtc_base/async_invoker.o",
        "src/out/Release/obj/rtc_base/criticalsection/critical_section.o",
        "src/out/Release/obj/rtc_base/platform_thread_types/platform_thread_types.o",
        "src/out/Release/obj/rtc_base/rtc_event/event.o",
        "src/out/Release/obj/rtc_base/rtc_base/message_handler.o",
        "src/out/Release/obj/rtc_base/rtc_base/thread.o",
        "src/out/Release/obj/rtc_base/rtc_base_approved/location.o",
        "src/out/Release/obj/rtc_base/rtc_base/async_socket.o",
        "src/out/Release/obj/rtc_base/synchronization/sequence_checker/sequence_checker.o",
        "src/out/Release/obj/rtc_base/rtc_base/async_udp_socket.o",
        "src/out/Release/obj/rtc_base/rtc_base/null_socket_server.o",
        "src/out/Release/obj/rtc_base/rtc_base/physical_socket_server.o",
        "src/out/Release/obj/rtc_base/rtc_base/socket_adapters.o",
        "src/out/Release/obj/rtc_base/rtc_base/net_helper.o",
        "src/out/Release/obj/rtc_base/rtc_base/net_helpers.o",
        "src/out/Release/obj/rtc_base/rtc_base/ssl_adapter.o",
        "src/out/Release/obj/rtc_base/rtc_base/ssl_certificate.o",
        "src/out/Release/obj/rtc_base/rtc_base/ssl_identity.o",
        "src/out/Release/obj/rtc_base/rtc_base/openssl_adapter.o",
        "src/out/Release/obj/rtc_base/rtc_base/openssl_session_cache.o",
        "src/out/Release/obj/rtc_base/rtc_base/openssl_certificate.o",
        "src/out/Release/obj/rtc_base/rtc_base/openssl_identity.o",
        "src/out/Release/obj/rtc_base/rtc_base/openssl_digest.o",
        "src/out/Release/obj/rtc_base/rtc_base/openssl_utility.o",
        "src/out/Release/obj/rtc_base/rtc_base/signal_thread.o",
        "src/out/Release/obj/rtc_base/rtc_base/message_digest.o",
        "src/out/Release/obj/rtc_base/rtc_base/helpers.o",
        "src/out/Release/obj/rtc_base/rtc_base/async_resolver_interface.o",
        "src/out/Release/obj/rtc_base/rtc_base/async_tcp_socket.o",
        "src/out/Release/obj/rtc_base/rtc_base/crc32.o",
        "src/out/Release/obj/rtc_base/rtc_base/rtc_certificate.o",
        "src/out/Release/obj/rtc_base/rtc_base/http_common.o",
        "src/out/Release/obj/rtc_base/synchronization/yield_policy/yield_policy.o",
        "src/out/Release/obj/rtc_base/platform_thread/platform_thread.o",
        "src/out/Release/obj/rtc_base/system/cocoa_threading/cocoa_threading.o",
    ],
    hdrs = [
        "src/rtc_base/string_encode.h",
        "src/rtc_base/string_to_number.h",
        "src/rtc_base/checks.h",
        "src/rtc_base/async_packet_socket.h",
        "src/rtc_base/numerics/safe_compare.h",
        "src/rtc_base/type_traits.h",
        "src/rtc_base/system/inline.h",
        "src/rtc_base/system/rtc_export.h",
        "src/rtc_base/constructor_magic.h",
        "src/rtc_base/dscp.h",
        "src/rtc_base/network/sent_packet.h",
        "src/rtc_base/socket.h",
        "src/rtc_base/socket_address.h",
        "src/rtc_base/ip_address.h",
        "src/rtc_base/byte_order.h",
        "src/rtc_base/system/arch.h",
        "src/rtc_base/third_party/sigslot/sigslot.h",
        "src/rtc_base/time_utils.h",
        "src/rtc_base/proxy_info.h",
        "src/rtc_base/crypt_string.h",
        "src/rtc_base/network_constants.h",
        "src/rtc_base/logging.h",
        "src/rtc_base/deprecation.h",
        "src/rtc_base/strings/string_builder.h",
        "src/rtc_base/ssl_fingerprint.h",
        "src/rtc_base/copy_on_write_buffer.h",
        "src/rtc_base/buffer.h",
        "src/rtc_base/zero_memory.h",
        "src/rtc_base/ref_counted_object.h",
        "src/rtc_base/ref_count.h",
        "src/rtc_base/ref_counter.h",
        "src/rtc_base/async_invoker.h",
        "src/rtc_base/async_invoker_inl.h",
        "src/rtc_base/bind.h",
        "src/rtc_base/critical_section.h",
        "src/rtc_base/platform_thread_types.h",
        "src/rtc_base/thread_annotations.h",
        "src/rtc_base/event.h",
        "src/rtc_base/message_handler.h",
        "src/rtc_base/thread.h",
        "src/rtc_base/location.h",
        "src/rtc_base/stringize_macros.h",
        "src/rtc_base/socket_server.h",
        "src/rtc_base/socket_factory.h",
        "src/rtc_base/async_socket.h",
        "src/rtc_base/thread_message.h",
        "src/rtc_base/thread_checker.h",
        "src/rtc_base/synchronization/sequence_checker.h",
        "src/rtc_base/async_udp_socket.h",
    ],
    deps = [
        ":boringssl-lib",
    ],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "rtc_p2p",
    srcs = [
        "src/out/Release/obj/p2p/rtc_p2p/basic_packet_socket_factory.o",
        "src/out/Release/obj/p2p/rtc_p2p/port_interface.o",
        "src/out/Release/obj/p2p/rtc_p2p/transport_description.o",
        "src/out/Release/obj/p2p/rtc_p2p/p2p_constants.o",
        "src/out/Release/obj/p2p/p2p_server_utils/turn_server.o",
        "src/out/Release/obj/p2p/rtc_p2p/async_stun_tcp_socket.o",
    ],
    hdrs = [
        "src/p2p/base/basic_packet_socket_factory.h",
        "src/api/packet_socket_factory.h",
        "src/p2p/base/port_interface.h",
        "src/p2p/base/transport_description.h",
        "src/p2p/base/p2p_constants.h",
        "src/p2p/base/turn_server.h",
    ],
    deps = [
        ":libjingle_peerconnection_api"
    ],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "libjingle_peerconnection_api",
    srcs = [
        "src/out/Release/obj/api/libjingle_peerconnection_api/candidate.o",
        "src/out/Release/obj/api/rtc_error/rtc_error.o",
        "src/out/Release/obj/api/task_queue/task_queue/task_queue_base.o",
        "src/out/Release/obj/api/transport/stun_types/stun.o",
    ],
    hdrs = [
        "src/api/candidate.h",
        "src/api/rtc_error.h",
        "src/api/array_view.h",
        "src/api/scoped_refptr.h",
        "src/api/function_view.h",
        "src/api/task_queue/queued_task.h",
        "src/api/task_queue/task_queue_base.h"
    ],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "boringssl-lib",
    srcs = [
        "src/out/Release/obj/third_party/boringssl/libboringssl.a",
    ],
    deps = [
        ":boringssl_asm-lib",
    ],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "boringssl_asm-lib",
    srcs = glob([
        "src/out/Release/obj/third_party/boringssl/boringssl_asm/*.o",
    ]),
    visibility = ["//visibility:public"],
)